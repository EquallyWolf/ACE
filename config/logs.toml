[main]
level = "info"                                                   # debug, info, warning, error, fatal
reload = false                                                   # if true, delete the old log file and create a new one
format = "{asctime} | {name: <15} | {levelname: <8} | {message}" # format of the log file

[[main.handlers]]
type = "file"  # type of the handler
level = "info" # debug, info, warning, error, fatal

[[main.handlers]]
type = "stdout"    # type of the handler
level = "critical" # debug, info, warning, error, fatal

[apis]
level = "info"                                                   # debug, info, warning, error, fatal
reload = false                                                   # if true, delete the old log file and create a new one
format = "{asctime} | {name: <15} | {levelname: <8} | {message}" # format of the log file

[[apis.handlers]]
type = "file"  # type of the handler
level = "info" # debug, info, warning, error, fatal

[[apis.handlers]]
type = "stdout"    # type of the handler
level = "critical" # debug, info, warning, error, fatal

[intents]
level = "info"                                                   # debug, info, warning, error, fatal
reload = false                                                   # if true, delete the old log file and create a new one
format = "{asctime} | {name: <15} | {levelname: <8} | {message}" # format of the log file

[[intents.handlers]]
type = "file"  # type of the handler
level = "info" # debug, info, warning, error, fatal

[[intents.handlers]]
type = "stdout"    # type of the handler
level = "critical" # debug, info, warning, error, fatal

[inputs]
level = "info"                                                   # debug, info, warning, error, fatal
reload = false                                                   # if true, delete the old log file and create a new one
format = "{asctime} | {name: <15} | {levelname: <8} | {message}" # format of the log file

[[inputs.handlers]]
type = "file"  # type of the handler
level = "info" # debug, info, warning, error, fatal

[[inputs.handlers]]
type = "stdout"    # type of the handler
level = "critical" # debug, info, warning, error, fatal

[outputs]
level = "info"                                                   # debug, info, warning, error, fatal
reload = false                                                   # if true, delete the old log file and create a new one
format = "{asctime} | {name: <15} | {levelname: <8} | {message}" # format of the log file

[[outputs.handlers]]
type = "file"  # type of the handler
level = "info" # debug, info, warning, error, fatal

[[outputs.handlers]]
type = "stdout"    # type of the handler
level = "critical" # debug, info, warning, error, fatal

[data]
level = "info"                                                   # debug, info, warning, error, fatal
reload = false                                                   # if true, delete the old log file and create a new one
format = "{asctime} | {name: <15} | {levelname: <8} | {message}" # format of the log file

[[data.handlers]]
type = "file"  # type of the handler
level = "info" # debug, info, warning, error, fatal

[[data.handlers]]
type = "stdout"    # type of the handler
level = "critical" # debug, info, warning, error, fatal

[models]
level = "info"                                                   # debug, info, warning, error, fatal
reload = false                                                   # if true, delete the old log file and create a new one
format = "{asctime} | {name: <15} | {levelname: <8} | {message}" # format of the log file

[[models.handlers]]
type = "file"  # type of the handler
level = "info" # debug, info, warning, error, fatal

[[models.handlers]]
type = "stdout"    # type of the handler
level = "critical" # debug, info, warning, error, fatal
